%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Examine entry in the airline industry using the probit model


%Load the data
clear all
run loadLongData
iota = ones(length(enter),1);
X=[iota pop city2 distance];

simDraws=20;
u=normrnd(0,1,rows(X),simDraws);
data.y=enter;
data.x=X;
data.z=X;
data.sim=u;


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%The first probit is adapted from Mike Cliff's GMM estimation
%Specify options for the GMM function below
op=foptions;
op(14)=8000;
op(2)=.000001;
op(3)=.000000000001;


b0 = zeros(size(X,2),1);
clear opt in
opt.gmmit = 1;
opt.W0 = 'I';
opt.plot = 0;
opt.vname = strvcat('Const','pop','city2','distance');

opt.infoz.momt = 'probitm';
opt.infoz.jake = 'probitj';
opt.S = 'probitS';
out3 = gmm(b0,opt,enter,X,X);
 ===============================================================
                      GMM ESTIMATION PROGRAM                     
 ===============================================================
 
 4 Parameters, 4 Moment Conditions
 1 Equation Model, 4 Instruments
 11408 Observations
 1 Passes, Max., 100 Iterations/Pass
 Search Direction:         Gauss-Newton
 Derivatives:              Analytical (probitj)
 Initial Weighting Matrix: I
 Weighting Matrix:         N/A
 Spectral Density Matrix:  User's (probitS)
 

                    STARTING GMM ITERATION  1
  Weights Attached to Moments
            Moment 1   Moment 2   Moment 3   Moment 4
Const         1.0000     0.0000     0.0000     0.0000
pop           0.0000     1.0000     0.0000     0.0000
city2         0.0000    -0.0000     1.0000     0.0000
distance      0.0000    -0.0000    -0.0000     1.0000
 
Line Minimization Using STEP2.M                     
Ill-Conditioning Tolerance Set to 1000              
Parameter Convergence Tolerance Set to 1e-4         
Objective Function Convergence Tolerance Set to 1e-7
Gradient Convergence Tolerance Set to 1e-7          

 ---------------------------------------------------------------

        ITER      cond(H)  *    Step                 Obj Fcn 
	  1      6.86e+000    1.000000  	  0.0472902804
	  2      7.09e+000    1.000000  	  0.0043083820
	  3      9.44e+000    1.000000  	  0.0003475421
	  4      1.63e+001    1.000000  	  0.0000113432
	  5      2.24e+001    1.000000  	  0.0000000332
	  6      2.44e+001    1.000000  	  0.0000000000
	  7      2.45e+001    1.000000  	  0.0000000000
	  8      2.45e+001    1.000000  	  0.0000000000
	  9      2.45e+001    1.000000  	  0.0000000000
	 10      2.45e+001    0.810000  	  0.0000000000
	 11      2.45e+001    1.000000  	  0.0000000000
	 12      2.45e+001    0.531441  	  0.0000000000
	 13      2.45e+001    0.205891  	  0.0000000000
	 14      2.45e+001    0.656100  	  0.0000000000
  CONVERGENCE CRITERIA MET: Change in Objective Function

            EVALUATING S at FINAL PARAMETER ESTIMATES

  ------------------  GMM PARAMETER ESTIMATES  -----------------
  Parameter        Coeff    Std Err    Null    t-stat     p-val
  Const        -3.523335   0.087046    0.00    -40.48    0.0000
  pop           0.037188   0.087463    0.00      0.43    0.6707
  city2         3.546465   0.063789    0.00     55.60    0.0000
  distance      0.635386   0.037447    0.00     16.97    0.0000
 
 ===============================================================


%Specify the options needed for the fminsearch program used below
op = optimset('TolFun',.00000000001,'TolX',.00000001,'MaxIter',5000);

%Specify my own GMM function and solve using the fminsearch program to 
%solve the GMM problem specified above.  Note that the estimation values 
%are the same.
[f1,o1]=fminsearch('probitGMMfunction',out3.b+[0.1;-0.2;0.6;0],op,data);

Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 

f1

f1 =

   -3.5233
    0.0372
    3.5465
    0.6354

01

ans =

     1

W=inv((1/size(X,1))*X'*X);
%Note that the weight matrix here is not the efficient weight matrix.
%I have more work to do here, but the 
w=numVarianceCov('probitMomentFunc',f1,data,W,.0001);
w.se

ans =

    0.1220
    0.0794
    0.0834
    0.0440



%Specify a simulation version of the probit model and use the fminsearch value
%to solve this problem near the solution.
[f3,o3,j]=repeatSearch('probitGMMsimulation',f1,op,data,20,.000000001);

Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 


Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 


Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 


Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 

f3

f3 =

   -3.7767
    0.0279
    3.6960
    0.7324

o3

o3 =

    6.3024

W=inv((1/size(X,1))*X'*X);
%Again, I need to do more work to solve for the standard errors.
w=numVarianceCov('probitSimulationMoment',f3,data,W,.01);
w.se

ans =

    0.7141
    2.8236
    1.5441
    0.3892




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Search programs:
%gridSearch - Creates a grid and searches for points in the
%grid that minimize the objective function.
%
%repeatSearch - Repeatedly applies the Nelder-Mead search algorithm
%until the local minimum is reached.  The algorithm is repeatedly applied
%because it often gets stuck and must be restarted at the point it 
%last attempted.


tic
f4=gridSearch('probitGMMsimulation',[-3.5,-4;0,.5;3,4;.5,1],[5;5;5;5],data,0,0);
toc

elapsed_time =

   37.9340

f4.b											%Paramters on the grid that minimize the objective function

ans =

   -3.8750
    0.1250
    3.7500
    0.7500

probitGMMsimulation(f4.b,data)		%Objective function at the value f4.b

ans =

   44.5247



[b4,o4,j,conv]=repeatSearch('probitGMMsimulation',f4.b,op,data,20,.00000000001);

Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 


Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 


Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 


Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 


Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 

b4												%Paramters after the repeatSearch

b4 =

   -3.8551
    0.0843
    3.7466
    0.7487

o4												%Value of objective function

o4 =

    0.4097


%%%%%%
%Note that the above search still does not reach the value of the objective function
%when the true paramter is used.  
%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Estimate the Berry model.  Do not consider the order of entry in estimating this model.
%Note that this model is lacking a constant term and I haven't estimated the variance-covariance
%matrix yet.


clear all
run loadWideData;
disp(which('testairlines'));
C:\Documents and Settings\Abe\Desktop\Entry\probit\TestAirlines.m
x=[pop distance];
xi=[sharepaxdist];
z=[x, xi];			%Remember that the number of insturements must be greater than num of paramters.
y=totenter;


%Simulation draws are taken for each market and each airline in each market
simDraws=5;
t=simDraws+simDraws*numAirlines;
sim=normrnd(0,1,rows(x),t);

rho=.5;


data.x=x;
data.xi=xi;
data.z=z;
data.sim=sim;
data.simdraws=simDraws;
data.numairlines=numAirlines;
data.rho=rho;
data.y=y;


options = optimset('TolFun',.00000000001,'TolX',.00000001,'MaxIter',5000);


%%%%%%%%%%%%%%%%%%%%%%%%%
%Use the gridsearch to find the area of the paramters.  Then locate the actual
%minimum by performing the Nelder-Mead algorithm until a minimum is reached.
%%%%%%%%%%%%%%%%%%%%%%%%%
tic
f=gridSearch('BerryGMMsim2',[-1.2,-0.8;0,.5;0.4,.8;10,13],[5;5;5;5],data,0,0)

f = 

    results: [625x5 double]
        val: 1.6084e+003
          b: [4x1 double]

f.b

ans =

   -1.0000
         0
    0.5000
   10.0000

toc

elapsed_time =

    9.2330


[b,o,j,c]=repeatSearch('BerryGMMsim2',f.b,options,data,8,.00000000001);

Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 


Optimization terminated successfully:
 the current x satisfies the termination criteria using OPTIONS.TolX of 1.000000e-008 
 and F(X) satisfies the convergence criteria using OPTIONS.TolFun of 1.000000e-011 

b

b =

   -0.9960
    0.0000
    0.4937
   10.4819

o

o =

  1.3091e+003



diary off;
