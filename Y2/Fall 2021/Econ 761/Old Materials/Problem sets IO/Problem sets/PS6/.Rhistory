(log(2)-log(8))*(1.29)
(log(4))*(1.29)
7-1
1.29*6
(log(4))*(0.77)
(log(400))*(0.77)
(log(4))*(0.77)
(log(4))*(0.51)
exp(-1.29)
1-exp(-1.29)
8-2
6/2
3*1.29
3*exp(1.29)
exp(-1.29)
3*exp(-1.29)
3*exp(-0.77)
3*exp(1-0.77)
3*exp(-1.77)
3*exp(-1.51)
3*exp(-2.29)
1-3*exp(-2.29)
3*exp(-1.29)
3*exp(-1.29)-1
library(matlib)
A=matrix(c(0,-2,1,0,-1,0,0,1,2,0,0,-2,0,2,-1,0),4,4)
A
echelon(A)
3*1.29
300*1.29
?save
library(matlib)
A=matrix(c(2,2,3,1,0,3,0,1,3),3,3)
echelon(A)
library(matlib)
A=matrix(c(1,0,1,3,2,1,6,6,3),3,3)
echelon(A)
library(matlib)
A=matrix(c(1,2,1,2,2,0,-1,-1,3,3,2,3),3,4)
A
echelon(A)
library(MASS)
fractions(echelon(A))
A=matrix(c(1,2,1,-1,4,3,1,0,2,0,1,3))
A=matrix(c(1,2,1,-1,4,3,1,0,2,0,1,3),4,3)
A
echelon(A)
4*31*3
4*31*3*-1
4*31*3*-1+1024
sqrt(652)
652/2
/2
652/2/2
652/2/2/3
652/2/2/4
652/2/2/6
652/2/2/7
652/2/2/8
652/2/2/9
fractions(sqrt(652))
library(MASS)
fractions(sqrt(652))
32-sqrt(652)
(23/28)^2
((23/28)^2)/3
14-5
((9/28)^2)/9
library(mvtnorm)
install.packages("mvtnorm")
library(mvtnorm)
library(mvnorm)
library(mtvnorm)
install.packages("mvtnorm")
library(mtvnorm)
install.packages("mvtnorm")
?install.packages
install.packages("~/Documents/Ph.D/Field Paper/mvtnorm_1.0-8.tar.gz")
install.packages("mvtnorm", dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("mvtnorm")
sqrt(292)
library(MASS)
fractions(1-2/3+7/12)*1/3
fractions(1-(2/3)+(7/12))*1/3
(1-4/5+7/20)*2/5
install.packages(mvtnorm)
install.packages("mvtnorm")
install.packages("mvtnorm")
library(mvtnorm)
(15+8+10)/3
(15+8+10+12+12)/5
11.4*100/20
57*0.25
70*0.25
70*100*0.25/80
40*100*0.25/70
14.25+21.875+14.28571
11*100*0.25/20
13.75+21.875+14.28571
50*100/75
gr <- read.csv("~/Downloads/2018-11-27T0903_Grades-FA18_MATH_340_002.csv", sep=",")
head(gr)
mean(gr$Midterm.2.Final.Score)
mean(gr$Midterm.2.Final.Score, na.rm=T)
gr <- gr[-1,]
head(gr)
mean(gr$Midterm.2.Final.Score, na.rm=T)
mean(as.numeric(gr$Midterm.2.Final.Score), na.rm=T)
mean(as.numeric(gr[,7]), na.rm=T)
mean(as.numeric(gr[,8]), na.rm=T)
mean(as.numeric(gr[,9]), na.rm=T)
mean(as.numeric(gr[,10]), na.rm=T)
mean(as.numeric(gr[,11]), na.rm=T)
(mean(as.numeric(gr[,8]), na.rm=T)+mean(as.numeric(gr[,9]), na.rm=T)+mean(as.numeric(gr[,10]), na.rm=T))*100*0.25/20
(mean(as.numeric(gr[,8]), na.rm=T)+mean(as.numeric(gr[,9]), na.rm=T)+mean(as.numeric(gr[,10]), na.rm=T))*100*0.25/20/3
mean(as.numeric(gr$Midterm.1..362303), na.rm=T)
mean(as.numeric(gr$Midterm.1..362303), na.rm=T)*100*0.25/80
mean(as.numeric(gr$Midterm.2..362304.), na.rm=T)*100*0.25/70
(18.71943+22.117+17.1606)*100/75
66.6*100/77.3
(max(as.numeric(gr[,8]), na.rm=T)+max(as.numeric(gr[,9]), na.rm=T)+max(as.numeric(gr[,10]), na.rm=T))*100*0.25/20/3
max(as.numeric(gr$Midterm.1..362303), na.rm=T)*100*0.25/80
max(as.numeric(gr$Midterm.2..362304.), na.rm=T)*100*0.25/70
140/189
13.75+21.875+14.28571
140/190
53.7+8.9+9.5
13.4+10.7+3.6+9.5
install.packages("MASS")
install.packages("doParallel")
install.packages("doRNG")
install.packages("mvtnorm")
rm(list=ls())
library(data.table)
library(MASS)
library(doParallel)
library(oglmx)
library(Matrix)
library(margins)
library(ggplot2)
cl <- makeCluster(2)
registerDoParallel(cl)
setwd("~/Documents/Ph.D/Econ 761 - Industrial Organization Theory/Problem sets/PS6/")
air <- read.csv("airlines.csv", sep=",", header=F)
colnames(air) <- c("citypair", "yr_q", "car", "pax", "pot96", "pot97", "enter", "city2",
"city972", "distance", "tourist", "basepop", "refpop", "paxtot", "pop",
"enter96", "totenter", "cityN2", "cityN1", "numroute", "sharepax", "sharepaxdist",
"totpotential", "herfCityPair", "incumbents", "totsinglepot", "dist2")
air <- data.table(air)
source("entrysimul.R")
source("combinesim.R")
air[, constant:=1]
x <- air[, c("yr_q", "citypair", "constant", "pop", "distance", "city2", "sharepaxdist",
"totenter", "enter", "herfCityPair", "totpotential", "totsinglepot")]
y <- x[which(yr_q==19972), c("citypair", "totenter")]
y <- y[, mean(totenter), by="citypair"]
setnames(y, c("citypair", "totenter"))
enter <- x[which(yr_q==19972), c("enter")]
x <- x[which(yr_q==19962), c("citypair", "constant", "pop", "distance", "city2", "sharepaxdist",
"totenter", "herfCityPair", "totpotential", "totsinglepot")]
x[, ltotenter:=log(totenter)]
x[, totenter:=NULL]
x <- cbind(x, enter)
x <- merge(x,y, by="citypair")
pot <- x[, mean(totpotential), by="citypair"]
pot <- data.frame(pot[,"V1"])
pot <- pot[,1]
z <- data.table(cbind(x[, "herfCityPair"]/10000, log(x[, "totpotential"]), log(x[,"totsinglepot"])))
setnames(z, c("herfindahl", "totpotential", "totsinglepot"))
x[, herfCityPair:=NULL]
x[, totpotential:=NULL]
x[, totsinglepot:=NULL]
x <- data.frame(x)
theta <- c(0.2,0.2,0.2,0.2,0.2,-0.5,0.3)
entrys <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=diag(30),
combinesim=combinesim, control=list(maxit=1))
gb1 <- foreach(i=1:ncol(pa), .combine=cbind, .packages=c("doParallel"))%dopar%{
gbi <- pa[,i]
gbi <- sweep(x1a, 1, gbi, `*`)
gbi
}
gb2 <- sweep(x2a, 1, v0a, `*`)
gba <- cbind(rep(gb2[,1], each=31), rep(gb2[,2], each=31), rep(gb2[,3], each=31),
rep(gb2[,4], each=31), rep(gb2[,5], each=31), rep(gb2[,6], each=31),
gb1)
dim(gba)
A <- (t(gba)%*%gba)/(184*31)
A
A <- solve(A)
View(A)
A <- (t(gba)%*%gba)
A <- solve(A)
View(A)
A <- (t(gba)%*%gba)/184
A <- solve(A)
View(A)
View(gb1)
View(gb2)
View(gb1)
A <- (t(gba)%*%gba)
View(A)
A <- (t(gba)%*%gba)/184
View(A)
A <- solve(A)
View(A)
theta <- c(0.2,0.2,0.2,0.2,0.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T))
entryf
theta <- c(1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T))
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T))
entryf
?optim
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T, reltol=1e-4))
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T, reltol=1e-3))
rm(list=ls())
library(data.table)
library(MASS)
library(doParallel)
library(oglmx)
library(Matrix)
library(margins)
library(ggplot2)
cl <- makeCluster(2)
registerDoParallel(cl)
setwd("~/Documents/Ph.D/Econ 761 - Industrial Organization Theory/Problem sets/PS6/")
air <- read.csv("airlines.csv", sep=",", header=F)
colnames(air) <- c("citypair", "yr_q", "car", "pax", "pot96", "pot97", "enter", "city2",
"city972", "distance", "tourist", "basepop", "refpop", "paxtot", "pop",
"enter96", "totenter", "cityN2", "cityN1", "numroute", "sharepax", "sharepaxdist",
"totpotential", "herfCityPair", "incumbents", "totsinglepot", "dist2")
air <- data.table(air)
source("entrysimul.R")
source("combinesim.R")
air[, constant:=1]
x <- air[, c("yr_q", "citypair", "constant", "pop", "distance", "city2", "sharepaxdist",
"totenter", "enter", "herfCityPair", "totpotential", "totsinglepot")]
y <- x[which(yr_q==19972), c("citypair", "totenter")]
y <- y[, mean(totenter), by="citypair"]
setnames(y, c("citypair", "totenter"))
enter <- x[which(yr_q==19972), c("enter")]
x <- x[which(yr_q==19962), c("citypair", "constant", "pop", "distance", "city2", "sharepaxdist",
"totenter", "herfCityPair", "totpotential", "totsinglepot")]
x[, ltotenter:=log(totenter)]
x[, totenter:=NULL]
x <- cbind(x, enter)
x <- merge(x,y, by="citypair")
pot <- x[, mean(totpotential), by="citypair"]
pot <- data.frame(pot[,"V1"])
pot <- pot[,1]
z <- data.table(cbind(x[, "herfCityPair"]/10000, log(x[, "totpotential"]), log(x[,"totsinglepot"])))
setnames(z, c("herfindahl", "totpotential", "totsinglepot"))
x[, herfCityPair:=NULL]
x[, totpotential:=NULL]
x[, totsinglepot:=NULL]
x <- data.frame(x)
theta <- c(0.2,0.2,0.2,0.2,0.2,-0.5,0.3)
entrys <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=diag(30),
combinesim=combinesim, control=list(maxit=1))
gb1 <- foreach(i=1:ncol(pa), .combine=cbind, .packages=c("doParallel"))%dopar%{
gbi <- pa[,i]
gbi <- sweep(x1a, 1, gbi, `*`)
gbi
}
gb2 <- sweep(x2a, 1, v0a, `*`)
gba <- cbind(rep(gb2[,1], each=31), rep(gb2[,2], each=31), rep(gb2[,3], each=31),
rep(gb2[,4], each=31), rep(gb2[,5], each=31), rep(gb2[,6], each=31),
gb1)
A <- (t(gba)%*%gba)/184
A <- solve(A)
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T, reltol=1e-3))
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T, reltol=1e-3))
entryf
source("entrysimul.R")
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T, reltol=1e-3))
entryf <- optim(theta, fn=entrysimul, method="BFGS", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T, reltol=1e-3),
lower=c(-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0), upper=c(Inf,Inf,Inf,Inf,Inf,Inf,1))
rm(list=ls())
library(data.table)
library(MASS)
library(doParallel)
library(oglmx)
library(Matrix)
library(margins)
library(ggplot2)
cl <- makeCluster(2)
registerDoParallel(cl)
setwd("~/Documents/Ph.D/Econ 761 - Industrial Organization Theory/Problem sets/PS6/")
air <- read.csv("airlines.csv", sep=",", header=F)
colnames(air) <- c("citypair", "yr_q", "car", "pax", "pot96", "pot97", "enter", "city2",
"city972", "distance", "tourist", "basepop", "refpop", "paxtot", "pop",
"enter96", "totenter", "cityN2", "cityN1", "numroute", "sharepax", "sharepaxdist",
"totpotential", "herfCityPair", "incumbents", "totsinglepot", "dist2")
air <- data.table(air)
source("entrysimul.R")
source("combinesim.R")
air[, constant:=1]
x <- air[, c("yr_q", "citypair", "constant", "pop", "distance", "city2", "sharepaxdist",
"totenter", "enter", "herfCityPair", "totpotential", "totsinglepot")]
y <- x[which(yr_q==19972), c("citypair", "totenter")]
y <- y[, mean(totenter), by="citypair"]
setnames(y, c("citypair", "totenter"))
enter <- x[which(yr_q==19972), c("enter")]
x <- x[which(yr_q==19962), c("citypair", "constant", "pop", "distance", "city2", "sharepaxdist",
"totenter", "herfCityPair", "totpotential", "totsinglepot")]
x[, ltotenter:=log(totenter)]
x[, totenter:=NULL]
x <- cbind(x, enter)
x <- merge(x,y, by="citypair")
pot <- x[, mean(totpotential), by="citypair"]
pot <- data.frame(pot[,"V1"])
pot <- pot[,1]
z <- data.table(cbind(x[, "herfCityPair"]/10000, log(x[, "totpotential"]), log(x[,"totsinglepot"])))
setnames(z, c("herfindahl", "totpotential", "totsinglepot"))
x[, herfCityPair:=NULL]
x[, totpotential:=NULL]
x[, totsinglepot:=NULL]
x <- data.frame(x)
theta <- c(0.2,0.2,0.2,0.2,0.2,-0.5,0.3)
entrys <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=diag(30),
combinesim=combinesim, control=list(maxit=1))
gb1 <- foreach(i=1:ncol(pa), .combine=cbind, .packages=c("doParallel"))%dopar%{
gbi <- pa[,i]
gbi <- sweep(x1a, 1, gbi, `*`)
gbi
}
gb2 <- sweep(x2a, 1, v0a, `*`)
gba <- cbind(rep(gb2[,1], each=31), rep(gb2[,2], each=31), rep(gb2[,3], each=31),
rep(gb2[,4], each=31), rep(gb2[,5], each=31), rep(gb2[,6], each=31),
gb1)
A <- (t(gba)%*%gba)/184
A <- solve(A)
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="L-BFGS-G", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T),
lower=c(-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0), upper=c(Inf,Inf,Inf,Inf,Inf,Inf,1))
entryf <- optim(theta, fn=entrysimul, method="L-BFGS-B", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T),
lower=c(-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0), upper=c(Inf,Inf,Inf,Inf,Inf,Inf,1))
rm(list=ls())
library(data.table)
library(MASS)
library(doParallel)
library(oglmx)
library(Matrix)
library(margins)
library(ggplot2)
cl <- makeCluster(2)
registerDoParallel(cl)
setwd("~/Documents/Ph.D/Econ 761 - Industrial Organization Theory/Problem sets/PS6/")
air <- read.csv("airlines.csv", sep=",", header=F)
colnames(air) <- c("citypair", "yr_q", "car", "pax", "pot96", "pot97", "enter", "city2",
"city972", "distance", "tourist", "basepop", "refpop", "paxtot", "pop",
"enter96", "totenter", "cityN2", "cityN1", "numroute", "sharepax", "sharepaxdist",
"totpotential", "herfCityPair", "incumbents", "totsinglepot", "dist2")
air <- data.table(air)
source("entrysimul.R")
source("combinesim.R")
air[, constant:=1]
x <- air[, c("yr_q", "citypair", "constant", "pop", "distance", "city2", "sharepaxdist",
"totenter", "enter", "herfCityPair", "totpotential", "totsinglepot")]
y <- x[which(yr_q==19972), c("citypair", "totenter")]
y <- y[, mean(totenter), by="citypair"]
setnames(y, c("citypair", "totenter"))
enter <- x[which(yr_q==19972), c("enter")]
x <- x[which(yr_q==19962), c("citypair", "constant", "pop", "distance", "city2", "sharepaxdist",
"totenter", "herfCityPair", "totpotential", "totsinglepot")]
x[, ltotenter:=log(totenter)]
x[, totenter:=NULL]
x <- cbind(x, enter)
x <- merge(x,y, by="citypair")
pot <- x[, mean(totpotential), by="citypair"]
pot <- data.frame(pot[,"V1"])
pot <- pot[,1]
z <- data.table(cbind(x[, "herfCityPair"]/10000, log(x[, "totpotential"]), log(x[,"totsinglepot"])))
setnames(z, c("herfindahl", "totpotential", "totsinglepot"))
x[, herfCityPair:=NULL]
x[, totpotential:=NULL]
x[, totsinglepot:=NULL]
x <- data.frame(x)
theta <- c(0.2,0.2,0.2,0.2,0.2,-0.5,0.3)
entrys <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=diag(30),
combinesim=combinesim, control=list(maxit=1))
gb1 <- foreach(i=1:ncol(pa), .combine=cbind, .packages=c("doParallel"))%dopar%{
gbi <- pa[,i]
gbi <- sweep(x1a, 1, gbi, `*`)
gbi
}
gb2 <- sweep(x2a, 1, v0a, `*`)
gba <- cbind(rep(gb2[,1], each=31), rep(gb2[,2], each=31), rep(gb2[,3], each=31),
rep(gb2[,4], each=31), rep(gb2[,5], each=31), rep(gb2[,6], each=31),
gb1)
A <- (t(gba)%*%gba)/184
A <- solve(A)
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T),
lower=c(-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,0), upper=c(Inf,Inf,Inf,Inf,Inf,Inf,1))
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.3)
entryf <- optim(theta, fn=entrysimul, method="Brent", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T),
lower=c(-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1), upper=c(Inf,Inf,Inf,Inf,Inf,Inf,1))
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.1)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T))
#lower=c(-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1), upper=c(Inf,Inf,Inf,Inf,Inf,Inf,1))
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.1)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T))
#lower=c(-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1), upper=c(Inf,Inf,Inf,Inf,Inf,Inf,1))
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.1)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T))
#lower=c(-Inf,-Inf,-Inf,-Inf,-Inf,-Inf,-1), upper=c(Inf,Inf,Inf,Inf,Inf,Inf,1))
stopCluster(cl)
cl <- makeCluster(2)
registerDoParallel(cl)
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.1)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T))
stopCluster(cl)
cl <- makeCluster(2)
registerDoParallel(cl)
theta <- c(-1,1.2,1.5,3.2,3.2,-0.5, 0.1)
entryf <- optim(theta, fn=entrysimul, method="Nelder-Mead", x=x, z=z, pot=pot, R=20, order=T, A=A,
combinesim=combinesim, control=list(trace=T, maxit=100))
entry
entryf
theta <- entryf$par
save(theta, "thetasimul.Rdata")
stopCluster(cl)
save(theta, "thetasimul.Rdata")
save(theta, file="thetasimul.Rdata")
source("oprobit.R")
source("vcovoprobit.R")
air[, constant:=1]
x <- air[, c("yr_q", "citypair", "constant", "pop", "distance", "city2", "sharepaxdist", "totenter", "totpotential")]
y <- x[which(yr_q==19972), c("citypair", "totpotential")]
y <- y[, mean(totpotential), by="citypair"]
setnames(y, c("citypair", "totpotential"))
x1 <- x[which(yr_q==19972), c("citypair", "constant", "pop", "distance","totenter")]
x1 <- x1[, list(mean(constant), mean(pop), mean(distance), mean(totenter)), by="citypair"]
setnames(x1, c("citypair", "constant", "pop", "distance", "totenter"))
x2 <- x[which(yr_q==19962), c("citypair","city2", "sharepaxdist")]
x1[, ltotenter:=log(totenter)]
x1[, totenter:=NULL]
x <- merge(x2, x1, by="citypair")
x <- merge(x,y, by="citypair")
x <- x[, c("citypair", "constant", "pop", "distance", "city2", "sharepaxdist", "ltotenter", "totpotential")]
x <- data.frame(x)
theta0 <- c(-1,1.2,1.5,3.2,3.2,-0.5)
ophet <- optim(theta0, fn=oprobit, method="Nelder-Mead", x=x, control=list(trace=T))
cl <- makeCluster(2)
registerDoParallel(cl)
source("oprobit.R")
source("vcovoprobit.R")
air[, constant:=1]
x <- air[, c("yr_q", "citypair", "constant", "pop", "distance", "city2", "sharepaxdist", "totenter", "totpotential")]
y <- x[which(yr_q==19972), c("citypair", "totpotential")]
y <- y[, mean(totpotential), by="citypair"]
setnames(y, c("citypair", "totpotential"))
x1 <- x[which(yr_q==19972), c("citypair", "constant", "pop", "distance","totenter")]
x1 <- x1[, list(mean(constant), mean(pop), mean(distance), mean(totenter)), by="citypair"]
setnames(x1, c("citypair", "constant", "pop", "distance", "totenter"))
x2 <- x[which(yr_q==19962), c("citypair","city2", "sharepaxdist")]
x1[, ltotenter:=log(totenter)]
x1[, totenter:=NULL]
x <- merge(x2, x1, by="citypair")
x <- merge(x,y, by="citypair")
x <- x[, c("citypair", "constant", "pop", "distance", "city2", "sharepaxdist", "ltotenter", "totpotential")]
x <- data.frame(x)
theta0 <- c(-1,1.2,1.5,3.2,3.2,-0.5)
ophet <- optim(theta0, fn=oprobit, method="Nelder-Mead", x=x, control=list(trace=T))
ophet
save(theta, file="thetaoprobit.Rdata")
theta <- ophet$par
save(theta, file="thetaoprobit.Rdata")
vcovphet <- vcovoprobit(theta=theta, x=x)
sqrt(diag(vcovphet))
test <- air[which(yr_q==19972), c("citypair", "city2", "sharepaxdist", "totenter", "enter")]
test[, za:=city2*theta[4]+sharepaxdist*theta[5]]
test[, dn:=theta[6]*(log(totenter)-log(totenter+1))]
xt <- split(test, as.factor(test[,citypair]))
acc <- foreach(i=1:length(xt), .combine=rbind, .packages=c("doParallel"))%dopar%{
xtt <- xt[[i]]
xtt <- data.frame(xtt)
dl <- mean(xtt[,"dn"])
enter <- xtt[which(xtt$enter==1), c("za")]
notenter <- xtt[which(xtt$enter==0), c("za")]
r <- foreach(j=1:length(notenter), .combine='+')%dopar%{
ri <- sum(as.numeric(enter-notenter[j]>dl))
ri
}
c(sum(r), length(enter)*length(notenter))
}
rej <- 1-(sum(acc[,1])/sum(acc[,2]))
rej
